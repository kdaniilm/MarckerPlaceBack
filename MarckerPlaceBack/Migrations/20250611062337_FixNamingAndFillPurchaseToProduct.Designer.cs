// <auto-generated />
using System;
using MarckerPlaceBack.Core.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarckerPlaceBack.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250611062337_FixNamingAndFillPurchaseToProduct")]
    partial class FixNamingAndFillPurchaseToProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MarckerPlaceBack.Core.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Vegetables"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Toys"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "cloth"
                        });
                });

            modelBuilder.Entity("MarckerPlaceBack.Core.Models.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CustomerId"));

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1L,
                            BirthDay = new DateTime(1997, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Dou",
                            Name = "John"
                        },
                        new
                        {
                            CustomerId = 2L,
                            BirthDay = new DateTime(2004, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Smit",
                            MiddleName = "Ben",
                            Name = "Jim"
                        },
                        new
                        {
                            CustomerId = 3L,
                            BirthDay = new DateTime(2005, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Smit",
                            Name = "Debra"
                        });
                });

            modelBuilder.Entity("MarckerPlaceBack.Core.Models.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductId"));

                    b.Property<string>("Articul")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1L,
                            Articul = "00000000-0000-0000-0000-000000000000",
                            CategoryId = 1,
                            Name = "Cucumber",
                            Price = 0.85m
                        },
                        new
                        {
                            ProductId = 2L,
                            Articul = "00000000-0000-0000-0000-000000000000",
                            CategoryId = 1,
                            Name = "Tomato",
                            Price = 1.10m
                        },
                        new
                        {
                            ProductId = 3L,
                            Articul = "00000000-0000-0000-0000-000000000000",
                            CategoryId = 2,
                            Name = "Hot Wheels Car",
                            Price = 2.99m
                        },
                        new
                        {
                            ProductId = 4L,
                            Articul = "00000000-0000-0000-0000-000000000000",
                            CategoryId = 3,
                            Name = "T-Shirt",
                            Price = 3.60m
                        },
                        new
                        {
                            ProductId = 5L,
                            Articul = "00000000-0000-0000-0000-000000000000",
                            CategoryId = 3,
                            Name = "Pants",
                            Price = 12.50m
                        });
                });

            modelBuilder.Entity("MarckerPlaceBack.Core.Models.Purchare", b =>
                {
                    b.Property<long>("PurchareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PurchareId"));

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PurchareDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PurchareId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Purchares");

                    b.HasData(
                        new
                        {
                            PurchareId = 1L,
                            CustomerId = 1L,
                            PurchareDate = new DateTime(2025, 6, 4, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 2.80m
                        },
                        new
                        {
                            PurchareId = 2L,
                            CustomerId = 2L,
                            PurchareDate = new DateTime(2025, 6, 6, 11, 25, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 12.50m
                        },
                        new
                        {
                            PurchareId = 3L,
                            CustomerId = 2L,
                            PurchareDate = new DateTime(2025, 6, 6, 12, 10, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 18.2m
                        },
                        new
                        {
                            PurchareId = 4L,
                            CustomerId = 3L,
                            PurchareDate = new DateTime(2025, 6, 7, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 14m
                        },
                        new
                        {
                            PurchareId = 5L,
                            CustomerId = 1L,
                            PurchareDate = new DateTime(2025, 6, 8, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 2.99m
                        });
                });

            modelBuilder.Entity("MarckerPlaceBack.Core.Models.PurchaseToProduct", b =>
                {
                    b.Property<long>("PurchaseToProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PurchaseToProductId"));

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("ProductsCount")
                        .HasColumnType("int");

                    b.Property<long>("PurchareId")
                        .HasColumnType("bigint");

                    b.HasKey("PurchaseToProductId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchareId");

                    b.ToTable("PurchasesToProducts");

                    b.HasData(
                        new
                        {
                            PurchaseToProductId = 1L,
                            ProductId = 1L,
                            ProductsCount = 2,
                            PurchareId = 1L
                        },
                        new
                        {
                            PurchaseToProductId = 2L,
                            ProductId = 2L,
                            ProductsCount = 1,
                            PurchareId = 1L
                        },
                        new
                        {
                            PurchaseToProductId = 3L,
                            ProductId = 5L,
                            ProductsCount = 1,
                            PurchareId = 2L
                        },
                        new
                        {
                            PurchaseToProductId = 4L,
                            ProductId = 4L,
                            ProductsCount = 2,
                            PurchareId = 3L
                        },
                        new
                        {
                            PurchaseToProductId = 5L,
                            ProductId = 2L,
                            ProductsCount = 10,
                            PurchareId = 3L
                        },
                        new
                        {
                            PurchaseToProductId = 6L,
                            ProductId = 1L,
                            ProductsCount = 10,
                            PurchareId = 4L
                        },
                        new
                        {
                            PurchaseToProductId = 7L,
                            ProductId = 2L,
                            ProductsCount = 5,
                            PurchareId = 4L
                        },
                        new
                        {
                            PurchaseToProductId = 8L,
                            ProductId = 3L,
                            ProductsCount = 1,
                            PurchareId = 5L
                        });
                });

            modelBuilder.Entity("MarckerPlaceBack.Core.Models.Product", b =>
                {
                    b.HasOne("MarckerPlaceBack.Core.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MarckerPlaceBack.Core.Models.Purchare", b =>
                {
                    b.HasOne("MarckerPlaceBack.Core.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MarckerPlaceBack.Core.Models.PurchaseToProduct", b =>
                {
                    b.HasOne("MarckerPlaceBack.Core.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarckerPlaceBack.Core.Models.Purchare", "Purchare")
                        .WithMany("PurchareToProducts")
                        .HasForeignKey("PurchareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Purchare");
                });

            modelBuilder.Entity("MarckerPlaceBack.Core.Models.Purchare", b =>
                {
                    b.Navigation("PurchareToProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
